{"ast":null,"code":"import _slicedToArray from \"/home/dev-80/Boomsourcing/development/project1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dev-80/Boomsourcing/development/project1/src/component/login/Form.js\";\nimport React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport validate from 'component/login/controller/controller_form';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  LoginInput: {\n    margin: '10px'\n  },\n  Button: {\n    margin: '10px'\n  }\n}));\n\nconst FormInput = ({\n  Tname,\n  Tlabel,\n  Ttype,\n  loginFn,\n  err\n}) => {\n  const _React$useState = React.useState(err),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        error = _React$useState2[0],\n        setErr = _React$useState2[1];\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    setErr(err);\n  }, [err]);\n  return React.createElement(TextField, {\n    name: Tname,\n    label: Tlabel,\n    variant: \"outlined\",\n    className: classes.LoginInput,\n    type: Ttype,\n    onChange: e => {\n      loginFn(e);\n      setErr(validate.handleInput(e));\n    },\n    error: error,\n    onBlur: e => setErr(validate.handleInput(e)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n\nFormInput.propTypes = {\n  Tname: PropTypes.string.isRequired,\n  Tlabel: PropTypes.string.isRequired,\n  Ttype: PropTypes.string,\n  loginFn: PropTypes.func.isRequired,\n  err: PropTypes.bool\n};\nexport default function LoginForm({\n  loginFn,\n  submitFn\n}) {\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        update = _React$useState4[0],\n        setUpdate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(validate.isValidated()),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        check = _React$useState6[0],\n        setCheck = _React$useState6[1];\n\n  console.log(useSelector(state => state.user));\n  React.useEffect(() => {\n    setCheck(validate.isValidated());\n  }, [update]);\n  const classes = useStyles();\n  return React.createElement(\"form\", {\n    onSubmit: e => {\n      submitFn(e);\n      setUpdate(!update);\n    },\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      padding: '25px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    Tname: \"email\",\n    Tlabel: \"Email\",\n    loginFn: loginFn,\n    err: check.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    Tname: \"password\",\n    Tlabel: \"Password\",\n    Ttype: \"password\",\n    loginFn: loginFn,\n    err: check.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.Button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit\"));\n}","map":{"version":3,"sources":["/home/dev-80/Boomsourcing/development/project1/src/component/login/Form.js"],"names":["React","TextField","Button","makeStyles","PropTypes","validate","useSelector","useStyles","theme","LoginInput","margin","FormInput","Tname","Tlabel","Ttype","loginFn","err","useState","error","setErr","classes","useEffect","e","handleInput","propTypes","string","isRequired","func","bool","LoginForm","submitFn","update","setUpdate","isValidated","check","setCheck","console","log","state","user","display","flexDirection","justifyContent","padding","email","password"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { TextField, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport validate from 'component/login/controller/controller_form';\n\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n\n LoginInput: {\n  margin: '10px',\n },\n Button: {\n  margin: '10px',\n }\n}))\n\n\nconst FormInput = ({Tname, Tlabel, Ttype, loginFn, err}) => {\n  const [error, setErr] = React.useState(err)\n  const classes = useStyles()\n  \n  React.useEffect(() => {\n    setErr(err)\n  },[err])\n\n return(\n  <TextField\n    name={Tname}\n    label={Tlabel}\n    variant=\"outlined\"\n    className={classes.LoginInput}\n    type={Ttype}\n    onChange={\n      (e)=>{\n        loginFn(e)\n        setErr(validate.handleInput(e))\n      }}\n    error={error}\n    onBlur={(e)=>setErr(validate.handleInput(e))}\n  />\n )\n}\nFormInput.propTypes = {\n Tname: PropTypes.string.isRequired,\n Tlabel: PropTypes.string.isRequired,\n Ttype: PropTypes.string,\n loginFn: PropTypes.func.isRequired,\n err: PropTypes.bool\n}\n\n\nexport default function LoginForm({loginFn, submitFn}){\n  const [update, setUpdate] = React.useState(true)\n  const [check, setCheck] = React.useState(validate.isValidated())\n  console.log(useSelector(state => state.user))\n  React.useEffect(() => {\n    setCheck(validate.isValidated())\n  }, [update])\n  const classes = useStyles()\n  \n    return (\n    <form \n      onSubmit={(e)=>{\n        submitFn(e)\n        setUpdate(!update)\n      }}\n      style={{\n        display:'flex', \n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n        padding: '25px',\n      }}\n    > \n      <FormInput\n\t      Tname={\"email\"}\n        Tlabel={\"Email\"}\n        loginFn={loginFn}\n        err={check.email}\n      />\n      <FormInput \n\t      Tname={\"password\"}\n        Tlabel={\"Password\"}\n\t      Ttype={\"password\"}\n        loginFn={loginFn}\n        err={check.password}\n      />\n      <Button \n        color=\"primary\" \n        variant=\"contained\"  \n        className={classes.Button}\n        type=\"submit\"\n      >\n        Submit\n      </Button>\t\n  </form>\n   \n    )\n}\n"]},"metadata":{},"sourceType":"module"}