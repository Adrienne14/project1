{"ast":null,"code":"import _defineProperty from \"/home/dev-80/Boomsourcing/development/project1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/dev-80/Boomsourcing/development/project1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dev-80/Boomsourcing/development/project1/src/component/login/LoginPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Paper, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\nimport validate from 'component/login/controller/controller_form';\nimport auth from 'component/login/controller/auth';\nimport LoginForm from 'component/login/Form';\nimport avatar from \"../../icons/doctor-svgrepo-com.svg\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sign_in } from 'redx/actions';\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    height: '100vh'\n  },\n  loginCont: {\n    height: 'auto',\n    width: '75%',\n    margin: 'auto',\n    boxShadow: '-7px 6px 21px 0px rgba(0,0,0,0.75)',\n    padding: '25px'\n  }\n}));\nexport default function LoginPage() {\n  const _React$useState = React.useState({\n    email: '',\n    password: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        credentials = _React$useState2[0],\n        setCredentials = _React$useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  const notify = variant => {\n    enqueueSnackbar(variant.msg, _objectSpread({}, variant, {\n      autoHideDuration: 3000\n    }));\n  };\n\n  const handleInput = e => {\n    var state = {\n      value: e.target.value,\n      target: e.target.name\n    };\n    setCredentials(_objectSpread({}, credentials, {\n      [state.target]: state.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!credentials.username || !credentials.password) {\n      validate.checkLogin(credentials);\n    }\n\n    auth.login(credentials).then(response => {\n      notify(response.notif);\n    }).then(() => {\n      dispatch(sign_in());\n      console.log(auth.isAuth());\n    });\n  };\n\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"div\",\n    maxWidth: \"sm\",\n    className: classes.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.loginCont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"doctorAvatar\",\n    src: avatar,\n    height: \"150\",\n    width: \"150\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    loginFn: handleInput,\n    submitFn: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/dev-80/Boomsourcing/development/project1/src/component/login/LoginPage.js"],"names":["React","Paper","Container","makeStyles","useSnackbar","validate","auth","LoginForm","useSelector","useDispatch","sign_in","useStyles","theme","mainContainer","backgroundColor","display","height","loginCont","width","margin","boxShadow","padding","LoginPage","useState","email","password","credentials","setCredentials","dispatch","enqueueSnackbar","notify","variant","msg","autoHideDuration","handleInput","e","state","value","target","name","handleSubmit","preventDefault","username","checkLogin","login","then","response","notif","console","log","isAuth","classes","avatar"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Paper, Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSnackbar } from 'notistack'\nimport validate from 'component/login/controller/controller_form'\nimport auth from 'component/login/controller/auth'\nimport LoginForm from 'component/login/Form'\nimport avatar from '../../icons/doctor-svgrepo-com.svg'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sign_in } from 'redx/actions'\n\nconst useStyles = makeStyles(theme=>({\n    mainContainer: {\n        backgroundColor: 'transparent',\n        display: 'flex',\n\theight: '100vh',\n    },\n    loginCont: {\n        height: 'auto',\n        width: '75%',   \n        margin: 'auto',\n        boxShadow: '-7px 6px 21px 0px rgba(0,0,0,0.75)',\n        padding: '25px'\n    }\n}))\n\nexport default function LoginPage() {\n    const [credentials, setCredentials] = React.useState({\n\temail: '',\n\tpassword: '',\n\t})\n    const dispatch = useDispatch()\n    const { enqueueSnackbar } = useSnackbar();\n    \n    const notify = variant => {\n        enqueueSnackbar(variant.msg, {...variant, autoHideDuration: 3000})\n    }\n    const handleInput = (e) => {\n        var state = {\n        value: e.target.value,\n        target: e.target.name\n            }\n        setCredentials({...credentials,[state.target]:state.value})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!credentials.username || !credentials.password){\n            validate.checkLogin(credentials)\n        }\n        auth.login(credentials)\n        .then(response => {\n            notify(response.notif)\n        }).then(() => {\n            dispatch(sign_in())\n            console.log(auth.isAuth())\n        })\n    }\n\n    const classes = useStyles()\n    return (\n        <Container component=\"div\" maxWidth=\"sm\" className={classes.mainContainer}>    \n            <Paper className={classes.loginCont}>\n                <img alt=\"doctorAvatar\" src={avatar} height=\"150\" width=\"150\" />\n                <LoginForm  loginFn={handleInput} submitFn={handleSubmit} />\n            </Paper>\n        </Container>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}