{"ast":null,"code":"import _defineProperty from \"/home/dev-80/Boomsourcing/development/project1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from \"axios\";\nimport * as ls from 'local-storage';\n\nclass api {\n  constructor() {\n    this.baseURL = 'http://localhost:3000';\n  }\n\n  async loginController(loginData, endpoint) {\n    try {\n      const response = await Axios.post(\"\".concat(this.baseURL, \"/\").concat(endpoint), {\n        email: loginData.email,\n        password: loginData.password\n      });\n\n      const data = _objectSpread({}, response, {\n        notif: {\n          msg: 'Login succesfully',\n          variant: 'success',\n          authenticated: 'true'\n        }\n      });\n\n      ls.set('user', JSON.stringify(data));\n      return data;\n    } catch (err) {\n      const data = {\n        notif: {\n          msg: 'Invalid username and password',\n          variant: 'error',\n          authenticated: 'false'\n        }\n      };\n      return data;\n    }\n  }\n\n}\n\nclass auth {\n  constructor() {\n    this.api = new api();\n    this.authenticated = false;\n  }\n\n  async login(credentials) {\n    const result = await this.api.loginController(credentials, 'login');\n    this.authenticated = result.notif.authenticated;\n    ls.set('auth', JSON.parse(this.authenticated));\n    return result;\n  }\n\n  isAuth() {\n    return ls.get('auth');\n  }\n\n}\n\nexport default new auth();","map":{"version":3,"sources":["/home/dev-80/Boomsourcing/development/project1/src/component/login/controller/auth.js"],"names":["Axios","ls","api","constructor","baseURL","loginController","loginData","endpoint","response","post","email","password","data","notif","msg","variant","authenticated","set","JSON","stringify","err","auth","login","credentials","result","parse","isAuth","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;;AAEA,MAAMC,GAAN,CAAU;AACNC,EAAAA,WAAW,GAAE;AACT,SAAKC,OAAL,GAAe,uBAAf;AACH;;AACD,QAAMC,eAAN,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA0C;AACtC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,WAAc,KAAKL,OAAnB,cAA8BG,QAA9B,GAAyC;AAC5DG,QAAAA,KAAK,EAAEJ,SAAS,CAACI,KAD2C;AAE5DC,QAAAA,QAAQ,EAAEL,SAAS,CAACK;AAFwC,OAAzC,CAAvB;;AAIA,YAAMC,IAAI,qBACHJ,QADG;AAENK,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAG,EAAE,mBAAN;AACPC,UAAAA,OAAO,EAAE,SADF;AAEPC,UAAAA,aAAa,EAAE;AAFR;AAFD,QAAV;;AAMAf,MAAAA,EAAE,CAACgB,GAAH,CAAO,MAAP,EAAeC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAf;AACA,aAAOA,IAAP;AACH,KAbD,CAaC,OAAMQ,GAAN,EAAU;AACP,YAAMR,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAG,EAAE,+BAAN;AACPC,UAAAA,OAAO,EAAE,OADF;AAEPC,UAAAA,aAAa,EAAE;AAFR;AADE,OAAb;AAMA,aAAOJ,IAAP;AACH;AACJ;;AA3BK;;AAgCV,MAAMS,IAAN,CAAW;AACPlB,EAAAA,WAAW,GAAE;AACT,SAAKD,GAAL,GAAW,IAAIA,GAAJ,EAAX;AACA,SAAKc,aAAL,GAAqB,KAArB;AACH;;AAED,QAAMM,KAAN,CAAYC,WAAZ,EAAwB;AACpB,UAAMC,MAAM,GAAG,MAAM,KAAKtB,GAAL,CAASG,eAAT,CAAyBkB,WAAzB,EAAsC,OAAtC,CAArB;AACA,SAAKP,aAAL,GAAqBQ,MAAM,CAACX,KAAP,CAAaG,aAAlC;AACAf,IAAAA,EAAE,CAACgB,GAAH,CAAO,MAAP,EAAeC,IAAI,CAACO,KAAL,CAAW,KAAKT,aAAhB,CAAf;AAEA,WAAOQ,MAAP;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WAAOzB,EAAE,CAAC0B,GAAH,CAAO,MAAP,CAAP;AACH;;AAhBM;;AAoBX,eAAe,IAAIN,IAAJ,EAAf","sourcesContent":["import Axios from \"axios\";\nimport * as ls from 'local-storage'\n\nclass api {\n    constructor(){\n        this.baseURL = 'http://localhost:3000'\n    }\n    async loginController(loginData, endpoint){\n        try {\n            const response = await Axios.post(`${this.baseURL}/${endpoint}`,{\n                email: loginData.email,\n                password: loginData.password\n            })\n            const data = {\n                ...response,\n                notif: {msg: 'Login succesfully',\n                variant: 'success',\n                authenticated: 'true'}\n            }\n            ls.set('user', JSON.stringify(data))\n            return data\n        }catch(err){\n            const data = {\n                notif: {msg: 'Invalid username and password',\n                variant: 'error',\n                authenticated: 'false'\n                }\n            }\n            return data\n        }\n    }\n\n}\n\n\nclass auth { \n    constructor(){\n        this.api = new api()\n        this.authenticated = false\n    }\n\n    async login(credentials){\n        const result = await this.api.loginController(credentials, 'login');\n        this.authenticated = result.notif.authenticated\n        ls.set('auth', JSON.parse(this.authenticated))\n        \n        return result\n    }\n\n    isAuth(){\n        return ls.get('auth')\n    }\n\n}\n\nexport default new auth()"]},"metadata":{},"sourceType":"module"}