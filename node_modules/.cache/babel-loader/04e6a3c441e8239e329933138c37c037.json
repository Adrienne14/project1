{"ast":null,"code":"import _defineProperty from \"/home/dev-80/Boomsourcing/development/project1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nclass formValidation {\n  constructor() {\n    this.validated = {\n      email: false,\n      password: false\n    };\n  }\n\n  handleInput(credentials) {\n    if (!credentials.target.value) {\n      this.validated = _objectSpread({}, this.validated, {\n        [\"\".concat(credentials.target.name)]: true\n      });\n      return this.validated[\"\".concat(credentials.target.name)];\n    }\n\n    try {\n      if (credentials.target.value !== '') {\n        this.validated = _objectSpread({}, this.validated, {\n          [\"\".concat(credentials.target.name)]: false\n        });\n        return this.validated[\"\".concat(credentials.target.name)];\n      }\n    } catch (err) {\n      return err;\n    }\n  }\n\n  checkLogin(credentials) {\n    if (!credentials.email) {\n      this.validated = _objectSpread({}, this.validated, {\n        email: true\n      });\n    }\n\n    if (!credentials.password) {\n      this.validated = _objectSpread({}, this.validated, {\n        password: true\n      });\n    }\n\n    return;\n  }\n\n  isValidated() {\n    return this.validated;\n  }\n\n}\n\nexport default new formValidation();","map":{"version":3,"sources":["/home/dev-80/Boomsourcing/development/project1/src/component/login/controller/controller_form.js"],"names":["formValidation","constructor","validated","email","password","handleInput","credentials","target","value","name","err","checkLogin","isValidated"],"mappings":";;;;;;AAAA,MAAMA,cAAN,CAAqB;AACjBC,EAAAA,WAAW,GAAE;AACT,SAAKC,SAAL,GAAiB;AACbC,MAAAA,KAAK,EAAE,KADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KAAjB;AAIH;;AAEDC,EAAAA,WAAW,CAACC,WAAD,EAAa;AACrB,QAAI,CAACA,WAAW,CAACC,MAAZ,CAAmBC,KAAxB,EAA8B;AAC7B,WAAKN,SAAL,qBACO,KAAKA,SADZ;AAEI,mBAAII,WAAW,CAACC,MAAZ,CAAmBE,IAAvB,IAAgC;AAFpC;AAIA,aAAO,KAAKP,SAAL,WAAkBI,WAAW,CAACC,MAAZ,CAAmBE,IAArC,EAAP;AACA;;AACD,QAAI;AACA,UAAIH,WAAW,CAACC,MAAZ,CAAmBC,KAAnB,KAA6B,EAAjC,EAAoC;AAChC,aAAKN,SAAL,qBACO,KAAKA,SADZ;AAEI,qBAAII,WAAW,CAACC,MAAZ,CAAmBE,IAAvB,IAAgC;AAFpC;AAIA,eAAO,KAAKP,SAAL,WAAkBI,WAAW,CAACC,MAAZ,CAAmBE,IAArC,EAAP;AACH;AACJ,KARD,CAQC,OAAMC,GAAN,EAAU;AACP,aAAOA,GAAP;AACH;AACH;;AAEDC,EAAAA,UAAU,CAACL,WAAD,EAAa;AACrB,QAAI,CAACA,WAAW,CAACH,KAAjB,EAAuB;AACnB,WAAKD,SAAL,qBACO,KAAKA,SADZ;AAEIC,QAAAA,KAAK,EAAE;AAFX;AAIH;;AACD,QAAI,CAACG,WAAW,CAACF,QAAjB,EAA0B;AACtB,WAAKF,SAAL,qBACO,KAAKA,SADZ;AAEIE,QAAAA,QAAQ,EAAE;AAFd;AAIH;;AACD;AACD;;AAEDQ,EAAAA,WAAW,GAAE;AACV,WAAO,KAAKV,SAAZ;AACF;;AA/CgB;;AAkDrB,eAAe,IAAIF,cAAJ,EAAf","sourcesContent":["class formValidation {\n    constructor(){\n        this.validated = {\n            email: false,\n            password: false\n        }\n    }\n\n    handleInput(credentials){\n       if (!credentials.target.value){\n        this.validated = {\n            ...this.validated,\n            [`${credentials.target.name}`]: true\n        }\n        return this.validated[`${credentials.target.name}`]\n       }\n       try {\n           if (credentials.target.value !== ''){\n               this.validated = {\n                   ...this.validated,\n                   [`${credentials.target.name}`]: false\n               }\n               return this.validated[`${credentials.target.name}`]\n           }\n       }catch(err){\n           return err\n       }\n    }\n\n    checkLogin(credentials){\n      if (!credentials.email){\n          this.validated = {\n              ...this.validated,\n              email: true\n          }\n      }\n      if (!credentials.password){\n          this.validated = {\n              ...this.validated,\n              password: true\n          }\n      }\n      return\n    }\n\n    isValidated(){\n       return this.validated\n    }\n}\n\nexport default new formValidation()"]},"metadata":{},"sourceType":"module"}